/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-.125rem}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.features_section{position:relative;z-index:-10;background-image:url(img/section_feature_bg.png);background-repeat:no-repeat;background-size:cover}.features_section .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:40.625rem;padding:2.8125rem 3.75rem}.features_section .container .section_header{font-size:3rem;text-transform:uppercase;font-family:AlegreyaSans;font-weight:700;margin:0;padding:0}.features_section .container .section_description{font-size:1.125rem;font-family:AlegreyaSans;text-align:center;padding:0;margin:1.25rem 0 3.125rem 0;width:26.25rem}.features_section .container .features_list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;list-style:none;margin:0;padding:0}.features_section .container .features_list .features_list__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.features_section .container .features_list .features_list__item .features_item_image{width:7.5rem;height:100%}.features_section .container .features_list .features_list__item .features_item__header{font-family:AlegreyaSans;font-weight:700;font-size:1.5625rem;margin:0;margin-top:1.25rem}.features_section .container .features_list .features_list__item .features_item__description{font-family:AlegreyaSans;font-size:1.125rem;text-align:center}.features_section .container .features_list .support_item_image{width:4.375rem;margin-bottom:7.8125rem}.features_section .features_decoration{position:absolute;width:9.375rem;height:18.75rem;left:0;bottom:-6.25rem}.feedback_section .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-family:AlegreyaSans;padding:0 2.8125rem}.feedback_section .container .section_header{font-weight:800;text-transform:uppercase;font-size:3rem}.feedback_section .container .feedback{border:.125rem solid red;background-image:url(img/feedback_berry.png);background-repeat:no-repeat;background-size:100%;padding:2.8125rem 3.125rem}.feedback_section .container .feedback .feedback__avatar{width:15.9375rem}.header{-webkit-box-sizing:border-box;box-sizing:border-box}.header .nav{font-family:AlegreyaSans;font-size:1.125rem;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center;list-style:none;margin:0;padding:0;height:5.625rem}.header .nav .logo{height:2.5rem;padding-left:3.75rem}.header .nav .phone{width:1.5rem;height:1.5rem}.header .nav .telephone{font-size:1.5rem;text-decoration:none;color:#fff;padding-right:3.75rem}.header .nav .main_nav{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;list-style:none;margin:0;padding:0}.header .nav .main_nav .main_nav__item{margin-right:1.5625rem}.header .nav .main_nav .main_nav_link{text-decoration:none;color:#fff}.main_section{background-image:url(img/main_bg.png);background-repeat:no-repeat;background-size:cover}.main_section .content{display:-webkit-box;display:-ms-flexbox;display:flex;margin-left:3.125rem;margin-right:2.8125rem;height:100%}.main_section .content .content__left-side{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-top:2.625rem;color:#fff;width:50%;font-family:AlegreyaSans;font-weight:700}.main_section .content .content__left-side .content__header{text-transform:uppercase;font-size:3.75rem;line-height:1;margin:0;padding:0}.main_section .content .content__left-side .content__desctiption{font-weight:400;font-size:1.3125rem;padding-left:.125rem;margin-top:.375rem;margin-bottom:1.8125rem;line-height:1.3;width:22.5rem}.main_section .content .content__left-side .btn{color:#0f5a47;text-decoration:none;width:auto;padding:1rem 2.1875rem;margin-left:.3125rem;background-color:#fff;border-radius:3.75rem;font-size:1.1875rem;text-transform:uppercase;font-weight:800}.main_section .content .content__left-side .content__features_list{font-weight:400;list-style:none;display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:4.0625rem;padding-left:0}.main_section .content .content__left-side .content__features_list .content__features_item{padding-left:3.4375rem;display:inline-block;position:relative;margin-right:1.25rem}.main_section .content .content__left-side .content__features_list .content__features_item:first-child::before{content:'';display:block;position:absolute;width:2.6875rem;height:2.6875rem;left:0;background-image:url(/img/leaf_icon.png)}.main_section .content .content__left-side .content__features_list .content__features_item:nth-child(2)::before{content:'';display:block;position:absolute;width:3.125rem;height:2.5rem;left:0;background-image:url(/img/car_icon.png)}.main_section .content .content__left-side .content__features_list .content__features_item:nth-child(3)::before{content:'';display:block;position:absolute;width:2.625rem;height:2.625rem;left:0;background-image:url(/img/waist_icon.png)}.main_section .content .content__right-side{width:50%;position:relative}.main_section .content .content__right-side .bars_image{position:absolute;left:.75rem;top:-2.5rem}.main_section .content .content__right-side .berry_image{position:absolute;left:3.4375rem;bottom:.625rem;width:45%;height:40%}.main_section .content .content__right-side .leaf_first{position:absolute;right:-1.875rem;bottom:4.375rem;width:50%;height:35%}.main_section .content .content__right-side .leaf_second{position:absolute;right:15rem;bottom:-3.4375rem;width:30%;height:20%}.main_section .content .content__right-side .berry_second{position:absolute;right:3.125rem;bottom:-4.875rem;width:21%;height:21%}.main_section .content .content__right-side .leaf_third{position:absolute;left:-109%;bottom:-4.875rem;width:12%;height:21%}.menu_section{background-image:url(img/menu_bg.png);background-repeat:no-repeat;background-size:cover;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.menu_section .menu_header{font-family:AlegreyaSans;font-weight:800;font-size:3rem;text-transform:uppercase;color:#fff;margin-left:2.5rem}.menu_section .menu_list{position:absolute;right:0;top:0;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;margin:0;padding:0;list-style:none}.menu_section .menu_list .milk_bar{background-image:url(img/kokos.png)}.menu_section .menu_list .fruit_bar{background-image:url(img/granola.png)}.menu_section .menu_list .wild_bar{background-image:url(img/shutter.png)}.menu_section .menu_list .menu_list__item{background-image:cover;background-repeat:no-repeat;overflow:hidden;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;font-family:AlegreyaSans;height:100%}.menu_section .menu_list .menu_list__item .title_block{position:relative;width:6.15385rem}.menu_section .menu_list .menu_list__item .title_block::before{content:'';position:absolute;top:0;bottom:0;left:0;right:0}.menu_section .menu_list .menu_list__item .title_block .item__title{position:absolute;bottom:4%;left:50%;font-weight:700;font-size:2.125rem;color:#fff;text-transform:uppercase;-webkit-transform:translateY(100%) rotate(-90deg);transform:translateY(100%) rotate(-90deg);-webkit-transform-origin:0 0;transform-origin:0 0;white-space:nowrap;margin:0;padding:0;margin-left:-1.25rem}.menu_section .menu_list .menu_list__item .title_block:nth-child(2){position:absolute;right:0;bottom:0;top:0;z-index:-10}.menu_section .menu_list .menu_list__item .item_description_block{display:none;left:3.75rem;background-color:rgba(47,50,52,.93);max-width:41.53846rem;overflow:hidden}.menu_section .menu_list .menu_list__item .item_description_block .description{width:25rem;height:100%;padding:2.8125rem;margin:0;font-size:1.125rem;color:#fff}.menu_section .menu_list .menu_list__item .item_description_block .cross{position:absolute;right:1.25rem;top:1.25rem;width:1.25rem;height:1.25rem}.slider_section{display:-webkit-box;display:-ms-flexbox;display:flex;background-image:url(img/slider_bg.png);background-repeat:no-repeat;background-size:cover}.slider_section .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 .625rem}.slider_section .container .arrow_left{background-image:url(img/arrow_l.png);background-repeat:no-repeat;background-position:50% 50%;width:2.8125rem;height:2.8125rem}.slider_section .container .wrapper{height:40.625rem}.slider_section .container .wrapper .slide_list{left:-100%;position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;list-style:none;margin:0;padding:0;height:100%;width:200%}.slider_section .container .wrapper .slide_list .slide{width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slider_section .container .wrapper .slide_list .slide .left_slide_side{position:relative;width:50%}.slider_section .container .wrapper .slide_list .slide .left_slide_side .slide_leaf_one{position:absolute;right:0;top:21.875rem;width:6.25rem;height:4.375rem}.slider_section .container .wrapper .slide_list .slide .left_slide_side .slide_leaf_two{position:absolute;left:0;top:5.625rem;width:4.375rem;height:6.25rem}.slider_section .container .wrapper .slide_list .slide .left_slide_side .bars_image{position:relative;left:3.125rem;width:25rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side{position:relative;padding-left:4rem;width:50%;height:100%}.slider_section .container .wrapper .slide_list .slide .right_slide_side .structure_btn{width:5.9375rem;height:5.9375rem;background-image:url(img/structure.png);background-repeat:no-repeat;margin-left:.375rem;margin-top:4.125rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .sctructure_list{position:absolute;border-radius:.625rem;left:10rem;top:4.0625rem;background-color:#eee;opacity:.9;list-style:none;margin:0;padding:0}.slider_section .container .wrapper .slide_list .slide .right_slide_side .sctructure_list .sctructure_list__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-family:AlegreyaSans;font-weight:600;font-size:1.125rem;padding:.4375rem .625rem;width:16.875rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .sctructure_list .sctructure_list__item .icon{width:2.1875rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_header{font-family:AlegreyaSans;font-weight:700;font-size:2.25rem;text-transform:uppercase;line-height:1.2;margin:0;margin-top:1.625rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_description{font-family:AlegreyaSans;font-size:1.125rem;line-height:1.2;margin-top:.625rem;margin-right:5rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block{font-family:AlegreyaSans;font-size:1.125rem;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .kkal_block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:40%}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .kkal_block .kkal_info{font-weight:700;margin-bottom:1.25rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .weight_block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:40%}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .weight_block .weight_info{font-weight:700;margin-bottom:1.25rem}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .price_block{width:40%}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .price_block .price{font-size:3.75rem;font-weight:400;margin:0}.slider_section .container .wrapper .slide_list .slide .right_slide_side .slide_info_block .btn{color:#fff;text-decoration:none;margin:0;width:auto;padding:1rem 2.1875rem;margin-left:.3125rem;background-color:#0f5a47;border-radius:1.875rem;font-size:1.1875rem;text-transform:uppercase;font-weight:800}.slider_section .container .arrow_right{background-image:url(img/arrow_r.png);background-repeat:no-repeat;background-position:50% 50%;width:2.8125rem;height:2.8125rem}.team_section{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-image:url(img/team_bg.png);background-size:cover;background-repeat:no-repeat}.team_section .container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;min-height:40.625rem;padding:0 2.5rem}.team_section .container .section_header{font-family:AlegreyaSans;font-weight:700;font-size:3rem;text-transform:uppercase;text-align:center}.team_section .container .team_list{list-style:none;margin:0;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.team_section .container .team_list .team_list__person{font-family:AlegreyaSans;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.team_section .container .team_list .team_list__person .person_img{width:13.75rem;height:18.75rem}.team_section .container .team_list .team_list__person .person_title{position:relative;padding-right:1.25rem;margin-top:.625rem;margin-bottom:.5rem;font-weight:600;font-size:1.3125rem}.team_section .container .team_list .team_list__person .person_title::after{position:absolute;top:.625rem;right:.3125rem;background-image:url(img/icons/arrow_down.png);background-position:center;background-repeat:no-repeat;background-size:cover;content:'';width:.625rem;height:.625rem}.team_section .container .team_list .team_list__person .person_block__descriptionn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;font-size:1.125rem}.team_section .container .team_list .team_list__person .person_block__descriptionn .position{font-weight:600}.team_section .container .team_list .team_list__person .person_block__descriptionn .person_description{font-weight:400;margin:0}html{height:100%;margin:0;padding:0;line-height:1.42;font-family:Ubuntu}*{-webkit-box-sizing:border-box;box-sizing:border-box}body{font-family:Ubuntu;height:100%}.container{outline:1px solid #7fff00;max-width:68.75rem;width:95%;margin:0 auto;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;height:100%;position:relative}.wrapper{position:relative;width:100%;overflow:hidden}.section{height:100%;min-height:40.625rem}.one-page-scroll{height:100%;-webkit-transition:-webkit-transform 1s;transition:-webkit-transform 1s;transition:transform 1s;transition:transform 1s,-webkit-transform 1s}.visually-hidden{position:absolute;clip:rect(0 0 0 0);width:1px;height:1px;margin:-1px}img{width:100%;height:100%}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-Regular.woff);font-weight:400}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-Bold.woff);font-weight:700}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-ExtraBold.woff);font-weight:800}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-Thin.woff);font-weight:lighter}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-Light.woff);font-weight:400}@font-face{font-family:AlegreyaSans;src:url(fonts/AlegreyaSans-Medium.woff);font-weight:600}/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 2.5rem}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 .125rem;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
